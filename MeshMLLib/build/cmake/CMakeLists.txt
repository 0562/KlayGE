PROJECT(MeshMLLib)

CMAKE_MINIMUM_REQUIRED(VERSION 2.8.6)

IF(COMMAND cmake_policy)
	CMAKE_POLICY(SET CMP0003 NEW)
ENDIF(COMMAND cmake_policy)

SET(MESHMLLIB_MAJOR_VERSION 1)
SET(MESHMLLIB_MINOR_VERSION 0)
SET(MESHMLLIB_PATCH_VERSION 0)
SET(MESHMLLIB_VERSION ${MESHMLLIB_MAJOR_VERSION}.${MESHMLLIB_MINOR_VERSION}.${MESHMLLIB_PATCH_VERSION})

OPTION(MESHMLLIB_WITH_WINRT "WinRT support." FALSE)

SET_PROPERTY(GLOBAL PROPERTY USE_FOLDERS ON)

IF(WIN32)
	IF(CMAKE_GENERATOR MATCHES "Win64")
		SET(MESHMLLIB_ARCH_NAME "x64")
	ELSEIF(CMAKE_GENERATOR MATCHES "ARM")
		SET(MESHMLLIB_ARCH_NAME "arm")
		SET(MESHMLLIB_WITH_WINRT TRUE)
	ELSE()
		SET(MESHMLLIB_ARCH_NAME "x86")
	ENDIF()
	SET(MESHMLLIB_PLATFORM_NAME "win")
ENDIF()
IF(UNIX)
	IF(CMAKE_SYSTEM_PROCESSOR MATCHES "x86_64")
		SET(MESHMLLIB_ARCH_NAME "x64")
	ELSE()
		SET(MESHMLLIB_ARCH_NAME "x86")
	ENDIF()
	SET(MESHMLLIB_PLATFORM_NAME "linux")
ENDIF()
IF(MESHMLLIB_WITH_WINRT)
	SET(MESHMLLIB_ARCH_NAME ${MESHMLLIB_ARCH_NAME}_app)
ENDIF()
SET(MESHMLLIB_PLATFORM_NAME ${MESHMLLIB_PLATFORM_NAME}_${MESHMLLIB_ARCH_NAME})

IF(WIN32)
	IF(MSVC)
		SET(CMAKE_C_FLAGS "/DWIN32 /D_WINDOWS /W4 /WX /GR /EHsc")
		SET(CMAKE_CXX_FLAGS "/DWIN32 /D_WINDOWS /W4 /WX /GR /EHsc")
		SET(CMAKE_STATIC_LINKER_FLAGS "/WX")

		IF(MESHMLLIB_WITH_WINRT)
			SET(CMAKE_STATIC_LINKER_FLAGS_DEBUG "/DEBUG /INCREMENTAL:NO")
			SET(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO "/DEBUG /INCREMENTAL:NO")
		ELSE()
			SET(CMAKE_STATIC_LINKER_FLAGS_DEBUG "/DEBUG /INCREMENTAL")
			SET(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO "/DEBUG /INCREMENTAL")
		ENDIF()

		SET(MESHMLLIB_COMPILER_NAME "vc")
		IF(MSVC_VERSION GREATER 1600)
			SET(MESHMLLIB_COMPILER_VERSION "11")
		ELSEIF(MSVC_VERSION GREATER 1500)
			SET(MESHMLLIB_COMPILER_VERSION "10")
		ELSEIF(MSVC_VERSION GREATER 1400)
			SET(MESHMLLIB_COMPILER_VERSION "9")
		ENDIF()

		IF(MSVC_VERSION GREATER 1500)
			SET(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} /MP")
			SET(CMAKE_CXX_FLAGS_RELWITHDEBINFO "${CMAKE_CXX_FLAGS_RELWITHDEBINFO} /MP")
			SET(CMAKE_CXX_FLAGS_MINSIZEREL "${CMAKE_CXX_FLAGS_MINSIZEREL} /MP")
		ENDIF()
		IF(MSVC_VERSION GREATER 1600)
			SET(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} /Qpar")
			SET(CMAKE_CXX_FLAGS_RELWITHDEBINFO "${CMAKE_CXX_FLAGS_RELWITHDEBINFO} /Qpar")
			SET(CMAKE_CXX_FLAGS_MINSIZEREL "${CMAKE_CXX_FLAGS_MINSIZEREL} /Qpar")
		ENDIF()
	ENDIF()
	IF(MINGW)
		SET(MESHMLLIB_COMPILER_NAME "mgw")
		SET(MESHMLLIB_COMPILER_VERSION "")
	ENDIF()
ELSE()
	SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -W -Wall -Wno-unused")
ENDIF()

SET(MESHML_PROJECT_DIR "${CMAKE_HOME_DIRECTORY}/../..")
SET(MESHMLLIB_OUTPUT_DIR "${MESHML_PROJECT_DIR}/lib/${MESHMLLIB_PLATFORM_NAME}")

# Set postfix
SET(CMAKE_DEBUG_POSTFIX "_d" CACHE STRING "add a postfix, usually d on windows")
SET(CMAKE_RELEASE_POSTFIX "" CACHE STRING "add a postfix, usually empty on windows")
SET(CMAKE_RELWITHDEBINFO_POSTFIX "" CACHE STRING "add a postfix, usually empty on windows")
SET(CMAKE_MINSIZEREL_POSTFIX "" CACHE STRING "add a postfix, usually empty on windows")


# The project settings

SET(LIB_NAME MeshMLLib)

SET(MESHMLLIB_SOURCE_FILES
	${MESHML_PROJECT_DIR}/src/MeshMLLib.cpp
)
SET(MESHMLLIB_HEADER_FILES
	${MESHML_PROJECT_DIR}/include/MeshMLLib/MeshMLLib.hpp
)
SOURCE_GROUP("Source Files" FILES ${MESHMLLIB_SOURCE_FILES})
SOURCE_GROUP("Header Files" FILES ${MESHMLLIB_HEADER_FILES})

ADD_DEFINITIONS(-DMESHMLLIB_SOURCE)
IF(MESHMLLIB_WITH_WINRT)
	ADD_DEFINITIONS(-ZW)
ENDIF()

INCLUDE_DIRECTORIES(${MESHML_PROJECT_DIR}/../External/boost)
INCLUDE_DIRECTORIES(${MESHML_PROJECT_DIR}/../KFL/include)
INCLUDE_DIRECTORIES(${MESHML_PROJECT_DIR}/include)
LINK_DIRECTORIES(${CMAKE_HOME_DIRECTORY}/../../../External/boost/lib_${MESHMLLIB_COMPILER_NAME}${MESHMLLIB_COMPILER_VERSION}_${MESHMLLIB_ARCH_NAME}/lib)
ADD_LIBRARY(${LIB_NAME} STATIC
	${MESHMLLIB_SOURCE_FILES} ${MESHMLLIB_HEADER_FILES}
)

SET(LIB_OUTPUT_NAME ${LIB_NAME}_${MESHMLLIB_COMPILER_NAME}_${MESHMLLIB_ARCH_NAME})

SET_TARGET_PROPERTIES(${LIB_NAME} PROPERTIES
	ARCHIVE_OUTPUT_DIRECTORY ${MESHMLLIB_OUTPUT_DIR}
	ARCHIVE_OUTPUT_DIRECTORY_DEBUG ${MESHMLLIB_OUTPUT_DIR}
	ARCHIVE_OUTPUT_DIRECTORY_RELEASE ${MESHMLLIB_OUTPUT_DIR}
	ARCHIVE_OUTPUT_DIRECTORY_RELWITHDEBINFO ${MESHMLLIB_OUTPUT_DIR}
	ARCHIVE_OUTPUT_DIRECTORY_MINSIZEREL ${MESHMLLIB_OUTPUT_DIR}
	PROJECT_LABEL ${LIB_NAME}
	DEBUG_POSTFIX ${CMAKE_DEBUG_POSTFIX}
	OUTPUT_NAME ${LIB_OUTPUT_NAME}
)
IF(MESHMLLIB_WITH_WINRT)
	SET_TARGET_PROPERTIES(${LIB_NAME} PROPERTIES VS_WINRT_EXTENSIONS TRUE)
ENDIF()

TARGET_LINK_LIBRARIES(${LIB_NAME})

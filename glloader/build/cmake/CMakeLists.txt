PROJECT(glloader)

CMAKE_MINIMUM_REQUIRED(VERSION 2.4.7)

IF(COMMAND cmake_policy)
	CMAKE_POLICY(SET CMP0003 NEW)
ENDIF(COMMAND cmake_policy)

SET(GLLOADER_MAJOR_VERSION 4)
SET(GLLOADER_MINOR_VERSION 0)
SET(GLLOADER_PATCH_VERSION 0)
SET(GLLOADER_VERSION ${GLLOADER_MAJOR_VERSION}.${GLLOADER_MINOR_VERSION}.${GLLOADER_PATCH_VERSION})

SET_PROPERTY(GLOBAL PROPERTY USE_FOLDERS ON)

IF(WIN32)
	IF(MSVC)
		SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /W4 /WX")

		SET(GLLOADER_COMPILER_NAME "vc")
		IF(MSVC_VERSION GREATER 1600)
			SET(GLLOADER_COMPILER_VERSION "11")
		ELSEIF(MSVC_VERSION GREATER 1500)
			SET(GLLOADER_COMPILER_VERSION "10")
		ELSEIF(MSVC_VERSION GREATER 1400)
			SET(GLLOADER_COMPILER_VERSION "9")
		ENDIF()

		IF(MSVC_VERSION GREATER 1500)
			SET(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} /MP")
			SET(CMAKE_CXX_FLAGS_RELWITHDEBINFO "${CMAKE_CXX_FLAGS_RELWITHDEBINFO} /MP")
			SET(CMAKE_CXX_FLAGS_MINSIZEREL "${CMAKE_CXX_FLAGS_MINSIZEREL} /MP")
		ENDIF()
		
		SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} /wd4055")
		SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /wd4055")
	ENDIF()
	IF(MINGW)
		SET(GLLOADER_COMPILER_NAME "mgw")
		SET(GLLOADER_COMPILER_VERSION "")
	ENDIF()

	SET(OPENGL_LIBRARIES "opengl32")
ELSE()
	SET(CMAKE_CXX_FLAGS "-W -Wall -Wno-unused")

	SET(OPENGL_LIBRARIES "MesaGL")
ENDIF()

IF(WIN32)
	IF(CMAKE_GENERATOR MATCHES "Win64")
		SET(GLLOADER_ARCH_NAME "x64")
	ELSE()
		SET(GLLOADER_ARCH_NAME "x86")
	ENDIF()
	SET(GLLOADER_PLATFORM_NAME "win")
ENDIF()
IF(UNIX)
	IF(CMAKE_SYSTEM_PROCESSOR MATCHES "x86_64")
		SET(GLLOADER_ARCH_NAME "x64")
	ELSE()
		SET(GLLOADER_ARCH_NAME "x86")
	ENDIF()
	SET(GLLOADER_PLATFORM_NAME "linux")
ENDIF()
SET(GLLOADER_PLATFORM_NAME ${GLLOADER_PLATFORM_NAME}_${GLLOADER_ARCH_NAME})

SET(GLLOADER_OUTPUT_DIR "${CMAKE_HOME_DIRECTORY}/../../lib/${GLLOADER_PLATFORM_NAME}" )
SET(GLLOADER_BIN_DIR "${CMAKE_HOME_DIRECTORY}/../../../KlayGE/bin/${GLLOADER_PLATFORM_NAME}" )

# Set postfix
SET(CMAKE_DEBUG_POSTFIX "_d" CACHE STRING "add a postfix, usually d on windows")
SET(CMAKE_RELEASE_POSTFIX "" CACHE STRING "add a postfix, usually empty on windows")
SET(CMAKE_RELWITHDEBINFO_POSTFIX "" CACHE STRING "add a postfix, usually empty on windows")
SET(CMAKE_MINSIZEREL_POSTFIX "" CACHE STRING "add a postfix, usually empty on windows")


# The project settings

SET(LIB_NAME glloader)
OPTION(GLLOADER_USE_GLES "Set to ON to use OpenGL ES to build glloader" OFF)

SET(GLLOADER_SOURCE_FILES
	../../src/glloader_egl.c
	../../src/glloader_gl.c
	../../src/glloader_gles.c
	../../src/glloader_glx.c
	../../src/glloader_wgl.c
	../../src/utils.cpp
)
SET(GLLOADER_INCLUDE_FILES
	../../include/glloader/glloader.h
	../../include/glloader/glloader_egl.h
	../../include/glloader/glloader_gl.h
	../../include/glloader/glloader_gles.h
	../../include/glloader/glloader_glx.h
	../../include/glloader/glloader_wgl.h
)
SET(GLLOADER_HEADER_FILES
	../../src/utils.h
)
SOURCE_GROUP("Source Files" FILES ${GLLOADER_SOURCE_FILES})
SOURCE_GROUP("Header Files" FILES ${GLLOADER_HEADER_FILES})
SOURCE_GROUP("Include Files" FILES ${GLLOADER_INCLUDE_FILES})

ADD_DEFINITIONS(-DGLLOADER_SOURCE)
IF(GLLOADER_USE_GLES)
	ADD_DEFINITIONS(-DGLLOADER_GLES_SUPPORT)
ENDIF()

INCLUDE_DIRECTORIES(../../include)
ADD_LIBRARY(${LIB_NAME} SHARED
	${GLLOADER_SOURCE_FILES} ${GLLOADER_HEADER_FILES} ${GLLOADER_INCLUDE_FILES}
)

IF(GLLOADER_USE_GLES)
	SET(LIB_OUTPUT_NAME ${LIB_NAME}_es_${GLLOADER_COMPILER_NAME}_${GLLOADER_ARCH_NAME})
ELSE()
	SET(LIB_OUTPUT_NAME ${LIB_NAME}_${GLLOADER_COMPILER_NAME}_${GLLOADER_ARCH_NAME})
ENDIF()

IF(MSVC)
	# hack to get around the "Debug" and "Release" directories cmake tries to add on Windows
	SET_TARGET_PROPERTIES(${LIB_NAME} PROPERTIES IMPORT_PREFIX "../")
ENDIF()

SET_TARGET_PROPERTIES(${LIB_NAME} PROPERTIES
	ARCHIVE_OUTPUT_DIRECTORY ${GLLOADER_OUTPUT_DIR}
	PROJECT_LABEL ${LIB_NAME}
	DEBUG_POSTFIX ${CMAKE_DEBUG_POSTFIX}
	OUTPUT_NAME ${LIB_OUTPUT_NAME}
)

ADD_CUSTOM_COMMAND(TARGET ${LIB_NAME} PRE_BUILD COMMAND "../../autogen.py")

TARGET_LINK_LIBRARIES(${LIB_NAME} ${OPENGL_LIBRARIES})


GET_PROPERTY(OUT_LOCATION_DEBUG TARGET ${LIB_NAME} PROPERTY LOCATION_DEBUG)
ADD_CUSTOM_COMMAND(TARGET ${LIB_NAME}
	POST_BUILD
	COMMAND ${CMAKE_COMMAND} -E copy ${OUT_LOCATION_DEBUG} ${GLLOADER_BIN_DIR})

GET_PROPERTY(OUT_LOCATION_RELWITHDEBINFO TARGET ${LIB_NAME} PROPERTY LOCATION_RELWITHDEBINFO)
ADD_CUSTOM_COMMAND(TARGET ${LIB_NAME}
	POST_BUILD
	COMMAND ${CMAKE_COMMAND} -E copy ${OUT_LOCATION_RELWITHDEBINFO} ${GLLOADER_BIN_DIR})


INSTALL(TARGETS ${LIB_NAME}
	RUNTIME DESTINATION ${GLLOADER_BIN_DIR}
	LIBRARY DESTINATION ${GLLOADER_BIN_DIR}
	ARCHIVE DESTINATION ${GLLOADER_OUTPUT_DIR}
)

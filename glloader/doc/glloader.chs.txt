GLLoader v3.0.0

GLLoader是一个OpenGL扩展载入库，可以载入OpenGL1.0-3.0，以及WGL、GLX等OpenGL扩展，只要编写xml脚本就能自动生成扩展载入代码。
GLLoader的特点是按照功能划分扩展，而不像其他同类产品是通过版本和扩展名称载入。
设置完include和lib目录之后，你需要做的唯一事情就是把#include <glloader/glloader.h>添加到你的代码中。
GLLoader遵循GPL协议。协议的内容可以参考附带的gpl.txt

接口

int glloader_is_supported(const char* name);
检测一个扩展是否支持。参数name为扩展的名字字符串。如果支持返回非0，否则返回0。
注意：可以使用GL_VERSION_x_y来检测是否支持x.y版本OpenGL核心。

void* glloader_get_gl_proc_address(const char* name);
载入一个OpenGL函数。参数name为要载入的函数名称。返回函数地址。
注意：如果试图载入一个不存在的函数，并不一定会返回NULL。


代码自动生成

由于载入代码具有极大的重复性，所以我采用了代码自动生成技术。在xml目录下的xml脚本包含一个扩展定义的typedef、常量、函数和初始化路径。用户可以根据格式写出自己需要支持的扩展脚本，然后运行autogen.py，就会在src和include目录下生成相应的载入代码。该xml格式的DTD，可以看附带的Extension.dtd。
需要Python 2.6以上来运行autogen.py。


SVN
https://svn.sourceforge.net/svnroot/klayge/trunk/glloader

PROJECT(kfont)

CMAKE_MINIMUM_REQUIRED(VERSION 2.4.7)

IF(COMMAND cmake_policy)
  CMAKE_POLICY(SET CMP0003 NEW)
ENDIF(COMMAND cmake_policy)

SET(KFONT_MAJOR_VERSION 1)
SET(KFONT_MINOR_VERSION 0)
SET(KFONT_PATCH_VERSION 0)
SET(KFONT_VERSION ${KFONT_MAJOR_VERSION}.${KFONT_MINOR_VERSION}.${KFONT_PATCH_VERSION})

IF(NOT WIN32)
    SET(CMAKE_CXX_FLAGS "-W -Wall -Wno-unused")
ENDIF(NOT WIN32)

# On CMake 2.4.x use EXECUTABLE_OUTPUT_PATH and LIBRARY_OUTPUT_PATH and later
# we work around the DLL placement by use of the PREFIX target property hack
#
# On CMake 2.6.x use the newly minted CMAKE_LIBRARY_OUTPUT_DIRECTORY,
# CMAKE_ARCHIVE_OUTPUT_DIRECTORY & CMAKE_RUNTIME_OUTPUT_DIRECTORY

IF(CMAKE_MAJOR_VERSION EQUAL 2 AND CMAKE_MINOR_VERSION LESS 5)
    SET(EXECUTABLE_OUTPUT_PATH ${OUTPUT_LIBDIR})
    SET(LIBRARY_OUTPUT_PATH    ${OUTPUT_LIBDIR})
ELSE()
    # If CMake >= 2.6.0
    SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${OUTPUT_LIBDIR})
    SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${OUTPUT_LIBDIR})
    SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${OUTPUT_LIBDIR})
ENDIF()


# Set postfix
SET(CMAKE_DEBUG_POSTFIX "_d" CACHE STRING "add a postfix, usually d on windows")
SET(CMAKE_RELEASE_POSTFIX "" CACHE STRING "add a postfix, usually empty on windows")
SET(CMAKE_RELWITHDEBINFO_POSTFIX "" CACHE STRING "add a postfix, usually empty on windows")
SET(CMAKE_MINSIZEREL_POSTFIX "" CACHE STRING "add a postfix, usually empty on windows")


# The project settings
INCLUDE_DIRECTORIES(${CMAKE_INCLUDE_PATH})
LINK_DIRECTORIES(${CMAKE_LIBRARY_PATH})

SET(LIB_NAME kfont)

SET(KFONT_SOURCE_FILES
    ../../src/kfont.cpp
)
SET(KFONT_HEADER_FILES
    ../../include/kfont/kfont.hpp
)
SOURCE_GROUP("Source Files" FILES ${KFONT_SOURCE_FILES})
SOURCE_GROUP("Header Files" FILES ${KFONT_HEADER_FILES})

ADD_DEFINITIONS(-DKFONT_SOURCE)

INCLUDE_DIRECTORIES(../../../External/boost ../../../External/7z ../../include)
ADD_LIBRARY(${LIB_NAME} SHARED
    ${KFONT_SOURCE_FILES} ${KFONT_HEADER_FILES}
)

SET(LIB_OUTPUT_NAME ${LIB_NAME})
IF(MSVC)
    SET(LIB_ARCHITECTURE "_x86")
    IF(CMAKE_CL_64)
        SET(LIB_ARCHITECTURE "_x64")
    ENDIF(CMAKE_CL_64)
    
    SET(LIB_OUTPUT_NAME "${LIB_OUTPUT_NAME}${LIB_ARCHITECTURE}")
ENDIF(MSVC)

SET_TARGET_PROPERTIES(${LIB_NAME} PROPERTIES PROJECT_LABEL "${LIB_NAME}")
SET_TARGET_PROPERTIES(${LIB_NAME} PROPERTIES DEBUG_POSTFIX "${CMAKE_DEBUG_POSTFIX}")
SET_TARGET_PROPERTIES(${LIB_NAME} PROPERTIES OUTPUT_NAME ${LIB_OUTPUT_NAME})
TARGET_LINK_LIBRARIES(${LIB_NAME})

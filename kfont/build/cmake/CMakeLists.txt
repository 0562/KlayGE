PROJECT(kfont)

CMAKE_MINIMUM_REQUIRED(VERSION 2.8.6)

IF(COMMAND cmake_policy)
	CMAKE_POLICY(SET CMP0003 NEW)
ENDIF(COMMAND cmake_policy)

SET(KFONT_MAJOR_VERSION 1)
SET(KFONT_MINOR_VERSION 0)
SET(KFONT_PATCH_VERSION 0)
SET(KFONT_VERSION ${KFONT_MAJOR_VERSION}.${KFONT_MINOR_VERSION}.${KFONT_PATCH_VERSION})

OPTION(KFONT_WITH_WINRT "WinRT support." FALSE)

SET_PROPERTY(GLOBAL PROPERTY USE_FOLDERS ON)

IF(WIN32)
	IF(CMAKE_GENERATOR MATCHES "Win64")
		SET(KFONT_ARCH_NAME "x64")
	ELSEIF(CMAKE_GENERATOR MATCHES "ARM")
		SET(KFONT_ARCH_NAME "arm")
		SET(KFONT_WITH_WINRT TRUE)
	ELSE()
		SET(KFONT_ARCH_NAME "x86")
	ENDIF()
	SET(KFONT_PLATFORM_NAME "win")
ENDIF()
IF(UNIX)
	IF(CMAKE_SYSTEM_PROCESSOR MATCHES "x86_64")
		SET(KFONT_ARCH_NAME "x64")
	ELSE()
		SET(KFONT_ARCH_NAME "x86")
	ENDIF()
	SET(KFONT_PLATFORM_NAME "linux")
ENDIF()
IF(KFONT_WITH_WINRT)
	SET(KFONT_ARCH_NAME ${KFONT_ARCH_NAME}_app)
ENDIF()
SET(KFONT_PLATFORM_NAME ${KFONT_PLATFORM_NAME}_${KFONT_ARCH_NAME})

IF(WIN32)
	IF(MSVC)
		SET(CMAKE_C_FLAGS "/DWIN32 /D_WINDOWS /W4 /WX /GR /EHsc")
		SET(CMAKE_CXX_FLAGS "/DWIN32 /D_WINDOWS /W4 /WX /GR /EHsc")
		SET(CMAKE_SHARED_LINKER_FLAGS "/WX")

		IF(KFONT_WITH_WINRT)
			SET(CMAKE_SHARED_LINKER_FLAGS_DEBUG "/DEBUG /INCREMENTAL:NO")
			SET(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO "/DEBUG /INCREMENTAL:NO")
		ELSE()
			SET(CMAKE_SHARED_LINKER_FLAGS_DEBUG "/DEBUG /INCREMENTAL")
			SET(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO "/DEBUG /INCREMENTAL")
		ENDIF()

		SET(KFONT_COMPILER_NAME "vc")
		IF(MSVC_VERSION GREATER 1600)
			SET(KFONT_COMPILER_VERSION "11")
		ELSEIF(MSVC_VERSION GREATER 1500)
			SET(KFONT_COMPILER_VERSION "10")
		ELSEIF(MSVC_VERSION GREATER 1400)
			SET(KFONT_COMPILER_VERSION "9")
		ENDIF()

		IF(MSVC_VERSION GREATER 1500)
			SET(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} /MP")
			SET(CMAKE_CXX_FLAGS_RELWITHDEBINFO "${CMAKE_CXX_FLAGS_RELWITHDEBINFO} /MP")
			SET(CMAKE_CXX_FLAGS_MINSIZEREL "${CMAKE_CXX_FLAGS_MINSIZEREL} /MP")

			SET(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} /LARGEADDRESSAWARE")
		ENDIF()
		IF(MSVC_VERSION GREATER 1600)
			SET(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} /Qpar")
			SET(CMAKE_CXX_FLAGS_RELWITHDEBINFO "${CMAKE_CXX_FLAGS_RELWITHDEBINFO} /Qpar")
			SET(CMAKE_CXX_FLAGS_MINSIZEREL "${CMAKE_CXX_FLAGS_MINSIZEREL} /Qpar")
		ENDIF()
	ELSEIF(MINGW)
		SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -W -Wall -Wno-unused -std=c11")
		SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -W -Wall -Wno-unused -std=c++11")
		SET(CMAKE_MODULE_LINKER_FLAGS_RELEASE "-s")
		
		SET(KFONT_COMPILER_NAME "mgw")
		SET(KFONT_COMPILER_VERSION "")
	ENDIF()
ELSE()
	SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -W -Wall -Wno-unused -std=c11")
	SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -W -Wall -Wno-unused -std=c++11")
	SET(CMAKE_MODULE_LINKER_FLAGS_RELEASE "-s")
	
	SET(KFL_COMPILER_NAME "gcc")
	SET(KFL_COMPILER_VERSION "")
ENDIF()

SET(KFONT_PROJECT_DIR "${CMAKE_HOME_DIRECTORY}/../../")
SET(KFONT_OUTPUT_DIR "${KFONT_PROJECT_DIR}/lib/${KFONT_PLATFORM_NAME}" )
SET(KFONT_BIN_DIR "${KFONT_PROJECT_DIR}/../KlayGE/bin/${KFONT_PLATFORM_NAME}" )

# Set postfix
SET(CMAKE_DEBUG_POSTFIX "_d" CACHE STRING "add a postfix, usually d on windows")
SET(CMAKE_RELEASE_POSTFIX "" CACHE STRING "add a postfix, usually empty on windows")
SET(CMAKE_RELWITHDEBINFO_POSTFIX "" CACHE STRING "add a postfix, usually empty on windows")
SET(CMAKE_MINSIZEREL_POSTFIX "" CACHE STRING "add a postfix, usually empty on windows")


# The project settings

SET(LIB_NAME kfont)

SET(KFONT_SOURCE_FILES
	${KFONT_PROJECT_DIR}/src/kfont.cpp
)
SET(KFONT_HEADER_FILES
	${KFONT_PROJECT_DIR}/include/kfont/kfont.hpp
)
SOURCE_GROUP("Source Files" FILES ${KFONT_SOURCE_FILES})
SOURCE_GROUP("Header Files" FILES ${KFONT_HEADER_FILES})

ADD_DEFINITIONS(-DKFONT_SOURCE)
IF(KFONT_WITH_WINRT)
	ADD_DEFINITIONS(-ZW)
ENDIF()

INCLUDE_DIRECTORIES(${KFONT_PROJECT_DIR}/../External/boost)
INCLUDE_DIRECTORIES(${KFONT_PROJECT_DIR}/../External/7z)
INCLUDE_DIRECTORIES(${KFONT_PROJECT_DIR}/../KFL/include)
INCLUDE_DIRECTORIES(${KFONT_PROJECT_DIR}/include)
LINK_DIRECTORIES(${KFONT_PROJECT_DIR}/../External/boost/lib_${KFONT_COMPILER_NAME}${KFONT_COMPILER_VERSION}_${KFONT_ARCH_NAME}/lib)
LINK_DIRECTORIES(${KFONT_PROJECT_DIR}/../KFL/lib/${KFONT_PLATFORM_NAME})
ADD_LIBRARY(${LIB_NAME} SHARED
	${KFONT_SOURCE_FILES} ${KFONT_HEADER_FILES}
)

SET(LIB_OUTPUT_NAME ${LIB_NAME}_${KFONT_COMPILER_NAME}_${KFONT_ARCH_NAME})

IF(MSVC)
	SET(EXTRA_LINKED_LIBRARIES "")
ELSEIF(MINGW)
	SET(EXTRA_LINKED_LIBRARIES 
		debug KFL_${KFONT_COMPILER_NAME}_${KFONT_ARCH_NAME}_d optimized KFL_${KFONT_COMPILER_NAME}_${KFONT_ARCH_NAME}
		debug boost_system-mgw47-mt-d-1_51 optimized boost_system-mgw47-mt-1_51)
ELSE()
	SET(EXTRA_LINKED_LIBRARIES
		debug KFL_${KFONT_COMPILER_NAME}_${KFONT_ARCH_NAME}_d optimized KFL_${KFONT_COMPILER_NAME}_${KFONT_ARCH_NAME}
		boost_system)
ENDIF()

SET_TARGET_PROPERTIES(${LIB_NAME} PROPERTIES
	ARCHIVE_OUTPUT_DIRECTORY ${KFONT_OUTPUT_DIR}
	ARCHIVE_OUTPUT_DIRECTORY_DEBUG ${KFONT_OUTPUT_DIR}
	ARCHIVE_OUTPUT_DIRECTORY_RELEASE ${KFONT_OUTPUT_DIR}
	ARCHIVE_OUTPUT_DIRECTORY_RELWITHDEBINFO ${KFONT_OUTPUT_DIR}
	ARCHIVE_OUTPUT_DIRECTORY_MINSIZEREL ${KFONT_OUTPUT_DIR}
	PROJECT_LABEL ${LIB_NAME}
	DEBUG_POSTFIX ${CMAKE_DEBUG_POSTFIX}
	OUTPUT_NAME ${LIB_OUTPUT_NAME}
)
IF(KFONT_WITH_WINRT)
	SET_TARGET_PROPERTIES(${LIB_NAME} PROPERTIES VS_WINRT_EXTENSIONS TRUE)
ENDIF()

TARGET_LINK_LIBRARIES(${LIB_NAME}
	${EXTRA_LINKED_LIBRARIES})


ADD_CUSTOM_COMMAND(TARGET ${LIB_NAME}
	POST_BUILD
	COMMAND ${CMAKE_COMMAND} -E copy_if_different $<TARGET_FILE_DIR:${LIB_NAME}>/$<TARGET_FILE_NAME:${LIB_NAME}> ${KFONT_BIN_DIR})


INSTALL(TARGETS ${LIB_NAME}
	RUNTIME DESTINATION ${KFONT_BIN_DIR}
	LIBRARY DESTINATION ${KFONT_BIN_DIR}
	ARCHIVE DESTINATION ${KFONT_OUTPUT_DIR}
)

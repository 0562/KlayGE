<?xml version='1.0'?>

<effect>
	<include name="Lighting.fxml"/>
	<include name="Noise.fxml"/>
	<include name="InfTerrain.fxml"/>

	<parameter type="float3" name="sun_dir"/>
	<parameter type="float3" name="sun_color"/>
	<parameter type="float3" name="fog_color"/>

	<parameter type="texture2D" name="ground_tex_detail">
		<annotation type="string" name="SasResourceAddress" value="RealSand38BoH.dds"/>
	</parameter>
	<parameter type="texture2D" name="ground_tex_base">
		<annotation type="string" name="SasResourceAddress" value="RealSand40BoH.dds"/>
	</parameter>

	<parameter type="sampler" name="linear_sampler">
		<state name="filtering" value="min_mag_mip_linear"/>
		<state name="address_u" value="wrap"/>
		<state name="address_v" value="wrap"/>
	</parameter>

	<shader>
		<![CDATA[
void TerrainVS(float2 pos : POSITION,
					out float3 normal_os_fog : TEXCOORD0,
					out float2 tex_coord : TEXCOORD1,
					out float4 oPos : SV_Position)
{
	float lacunarity = 1.93485736f;
	float gain = 1.0f / 1.93485736f;

	float4 pos_os = GetInfTerrainPosOS(pos, 0);

	float fog_scale = saturate(length(pos_os.xz - eye_pos.xz) / 1200.0f);

	pos_os.y = fBm(pos_os.xz / 128, 5, lacunarity, gain);
	
	float d = 1.0f;
	float fx = fBm((pos_os.xz + float2(d, 0)) / 128, 5, lacunarity, gain);
	float fy = fBm((pos_os.xz + float2(0, d)) / 128, 5, lacunarity, gain);
	normal_os_fog.xy = (float2(fx, fy) - pos_os.y) * stretch;
	pos_os.y *= stretch;
	pos_os.y += base_level;

	oPos = mul(pos_os, mvp);
	tex_coord = pos_os.xz / 8;
	normal_os_fog.z = fog_scale;
}

float4 TerrainPS(float3 normal_os_fog : TEXCOORD0, float2 tex_coord : TEXCOORD1) : SV_Target0
{
	float3 color = (sun_color * directional_lighting(-sun_dir, normalize(float3(normal_os_fog.x, 1, normal_os_fog.y))) + 0.1f)
		* (ground_tex_detail.Sample(linear_sampler, tex_coord).rgb + ground_tex_base.Sample(linear_sampler, tex_coord / 16).rgb) / 2;
	return float4(lerp(saturate(color), fog_color, normal_os_fog.z), 1);
}
		]]>
	</shader>
	
	<technique name="Terrain">
		<pass name="p0">
			<state name="polygon_mode" value="fill"/>
			
			<state name="vertex_shader" value="TerrainVS()"/>
			<state name="pixel_shader" value="TerrainPS()"/>
		</pass>
	</technique>
</effect>

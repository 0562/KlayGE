PROJECT(Samples)

CMAKE_MINIMUM_REQUIRED(VERSION 2.8.6)

IF(COMMAND cmake_policy)
	CMAKE_POLICY(SET CMP0003 NEW)
ENDIF(COMMAND cmake_policy)

FIND_PATH(KLAYGE_PROJECT_DIR klayge_logo.ico PATHS ../../../)
MARK_AS_ADVANCED(KLAYGE_PROJECT_DIR)
SET(KLAYGE_ROOT_DIR "${KLAYGE_PROJECT_DIR}/..")

INCLUDE(${KLAYGE_ROOT_DIR}/cmake/Common.cmake)
INCLUDE(${KLAYGE_ROOT_DIR}/cmake/Platform.cmake)
INCLUDE(${KLAYGE_ROOT_DIR}/cmake/Compiler.cmake)

SET_PROPERTY(GLOBAL PROPERTY USE_FOLDERS ON)

SET(KLAYGE_OUTPUT_DIR "${KLAYGE_PROJECT_DIR}/lib/${KLAYGE_PLATFORM_NAME}")
SET(KLAYGE_BIN_DIR "${KLAYGE_PROJECT_DIR}/bin/${KLAYGE_PLATFORM_NAME}")


# Required variables:
# - SOURCE_FILES/HEADER_FILES/RESOURCE_FILES
# - EFFECT_FILES/POST_PROCESSORS/UI_FILES
# - EXTRA_INCLUDE_DIRS: dependencies required besides KlayGE_Core and boost
# - EXTRA_LINKED_LIBRARIES: dependencies required besides KlayGE_Core and boost
#
MACRO(SETUP_SAMPLE EXE_NAME)
	IF(KLAYGE_BUILD_PLATFORM_WINRT)
		ADD_DEFINITIONS(-ZW)

		SET(SHORT_NAME ${EXE_NAME})

		IF(PERMISSION_LOCATION)
			SET(PERMISSION_LOCATION_STR "<DeviceCapability Name=\"location\" />")
		ENDIF()

		CONFIGURE_FILE(
			${KLAYGE_ROOT_DIR}/cmake/WinRT/Package_${KLAYGE_COMPILER_NAME}${KLAYGE_COMPILER_VERSION}.appxmanifest.in
			${CMAKE_CURRENT_BINARY_DIR}/Package.appxmanifest
			@ONLY
		)

		SET(CONTENT_FILES ${CONTENT_FILES}
			${CMAKE_CURRENT_BINARY_DIR}/Package.appxmanifest
			${KLAYGE_PROJECT_DIR}/Samples/media/Common/Assets/Logo.png
			${KLAYGE_PROJECT_DIR}/Samples/media/Common/Assets/SmallLogo.png
			${KLAYGE_PROJECT_DIR}/Samples/media/Common/Assets/SplashScreen.png
			${KLAYGE_PROJECT_DIR}/Samples/media/Common/Assets/StoreLogo.png
		)

		SET(DEBUG_CONTENT_FILES
			${KLAYGE_PROJECT_DIR}/bin/${KLAYGE_PLATFORM_NAME}/7zxa${KLAYGE_OUTPUT_SUFFIX}${CMAKE_DEBUG_POSTFIX}.dll
			${KLAYGE_PROJECT_DIR}/bin/${KLAYGE_PLATFORM_NAME}/LZMA${KLAYGE_OUTPUT_SUFFIX}${CMAKE_DEBUG_POSTFIX}.dll
			${KLAYGE_PROJECT_DIR}/bin/${KLAYGE_PLATFORM_NAME}/kfont${KLAYGE_OUTPUT_SUFFIX}${CMAKE_DEBUG_POSTFIX}.dll
			${KLAYGE_PROJECT_DIR}/bin/${KLAYGE_PLATFORM_NAME}/KlayGE_Core${KLAYGE_OUTPUT_SUFFIX}${CMAKE_DEBUG_POSTFIX}.dll
			${KLAYGE_PROJECT_DIR}/bin/${KLAYGE_PLATFORM_NAME}/Render/KlayGE_RenderEngine_D3D11${KLAYGE_OUTPUT_SUFFIX}${CMAKE_DEBUG_POSTFIX}.dll
			${KLAYGE_PROJECT_DIR}/bin/${KLAYGE_PLATFORM_NAME}/Scene/KlayGE_Scene_OCTree${KLAYGE_OUTPUT_SUFFIX}${CMAKE_DEBUG_POSTFIX}.dll
			${KLAYGE_PROJECT_DIR}/bin/${KLAYGE_PLATFORM_NAME}/Input/KlayGE_InputEngine_MsgInput${KLAYGE_OUTPUT_SUFFIX}${CMAKE_DEBUG_POSTFIX}.dll
		)
		SET(RELEASE_CONTENT_FILES
			${KLAYGE_PROJECT_DIR}/bin/${KLAYGE_PLATFORM_NAME}/7zxa${KLAYGE_OUTPUT_SUFFIX}.dll
			${KLAYGE_PROJECT_DIR}/bin/${KLAYGE_PLATFORM_NAME}/LZMA${KLAYGE_OUTPUT_SUFFIX}.dll
			${KLAYGE_PROJECT_DIR}/bin/${KLAYGE_PLATFORM_NAME}/kfont${KLAYGE_OUTPUT_SUFFIX}.dll
			${KLAYGE_PROJECT_DIR}/bin/${KLAYGE_PLATFORM_NAME}/KlayGE_Core${KLAYGE_OUTPUT_SUFFIX}.dll
			${KLAYGE_PROJECT_DIR}/bin/${KLAYGE_PLATFORM_NAME}/Render/KlayGE_RenderEngine_D3D11${KLAYGE_OUTPUT_SUFFIX}.dll
			${KLAYGE_PROJECT_DIR}/bin/${KLAYGE_PLATFORM_NAME}/Scene/KlayGE_Scene_OCTree${KLAYGE_OUTPUT_SUFFIX}.dll
			${KLAYGE_PROJECT_DIR}/bin/${KLAYGE_PLATFORM_NAME}/Input/KlayGE_InputEngine_MsgInput${KLAYGE_OUTPUT_SUFFIX}.dll
		)

		SET(RESOURCE_FILES
			${CONTENT_FILES} ${DEBUG_CONTENT_FILES} ${RELEASE_CONTENT_FILES}
			${KLAYGE_PROJECT_DIR}/Samples/media/Common/KlayGE_TemporaryKey.pfx)

		SET_SOURCE_FILES_PROPERTIES(${CONTENT_FILES} ${POST_PROCESSORS} ${UI_FILES}
			PROPERTIES
			VS_WINRT_CONTENT 1)
		SET_SOURCE_FILES_PROPERTIES(${DEBUG_CONTENT_FILES}
			PROPERTIES
			VS_WINRT_CONTENT $<CONFIG:Debug>)
		SET_SOURCE_FILES_PROPERTIES(${RELEASE_CONTENT_FILES}
			PROPERTIES
			VS_WINRT_CONTENT $<OR:$<CONFIG:Release>,$<CONFIG:RelWithDebInfo>,$<CONFIG:MinSizeRel>>)
	ELSEIF(KLAYGE_BUILD_PLATFORM_ANDROID)
		IF(CMAKE_BUILD_TYPE STREQUAL "Debug")
			SET(PROJ_NAME "${EXE_NAME}_d")
		ELSE()
			SET(PROJ_NAME "${EXE_NAME}")
		ENDIF()
		SET(SHORT_NAME ${PROJ_NAME})

		STRING(TOLOWER ${SHORT_NAME} SHORT_NAME_LOWER_CASE)
		CONFIGURE_FILE(
			${KLAYGE_ROOT_DIR}/cmake/Android/AndroidManifest.xml.in
			${CMAKE_CURRENT_BINARY_DIR}/AndroidManifest.xml
			@ONLY
		)
		CONFIGURE_FILE(
			${KLAYGE_ROOT_DIR}/cmake/Android/strings.xml.in
			${CMAKE_CURRENT_BINARY_DIR}/res/values/strings.xml
			@ONLY
		)
	ELSEIF(KLAYGE_BUILD_PLATFORM_WINDOWS)
		SET(RESOURCE_FILES ${RESOURCE_FILES}
			${KLAYGE_PROJECT_DIR}/Samples/media/Common/KlayGESample.rc
			${KLAYGE_PROJECT_DIR}/klayge_logo.ico
		)
	ENDIF()

	IF(KLAYGE_BUILD_PLATFORM_WINRT OR KLAYGE_BUILD_PLATFORM_ANDROID)
		FOREACH(item ${CONTENT_FILES})
			GET_FILENAME_COMPONENT(ITEM_EXT_NAME ${item} EXT)
			STRING(TOLOWER ${ITEM_EXT_NAME} ITEM_EXT_NAME)
			IF((ITEM_EXT_NAME STREQUAL ".kfx") OR (ITEM_EXT_NAME STREQUAL ".model_bin"))
				SET_SOURCE_FILES_PROPERTIES(${item} PROPERTIES GENERATED 1)
			ENDIF()
		ENDFOREACH()
	ENDIF()

	SOURCE_GROUP("Source Files" FILES ${SOURCE_FILES})
	SOURCE_GROUP("Header Files" FILES ${HEADER_FILES})
	SOURCE_GROUP("Resource Files" FILES ${RESOURCE_FILES})
	SOURCE_GROUP("Effect Files" FILES ${EFFECT_FILES})
	SOURCE_GROUP("Post Processors" FILES ${POST_PROCESSORS})
	SOURCE_GROUP("UI Files" FILES ${UI_FILES})

	INCLUDE_DIRECTORIES(${Boost_INCLUDE_DIR})
	INCLUDE_DIRECTORIES(${KLAYGE_PROJECT_DIR}/../KFL/include)
	INCLUDE_DIRECTORIES(${KLAYGE_PROJECT_DIR}/Core/Include)
	INCLUDE_DIRECTORIES(${KLAYGE_PROJECT_DIR}/Samples/src/Common)
	IF(KLAYGE_BUILD_PLATFORM_ANDROID)
		INCLUDE_DIRECTORIES(${KLAYGE_PROJECT_DIR}/../External/android_native_app_glue)
	ENDIF()
	INCLUDE_DIRECTORIES(${EXTRA_INCLUDE_DIRS})
	LINK_DIRECTORIES(${Boost_LIBRARY_DIR})
	LINK_DIRECTORIES(${KLAYGE_PROJECT_DIR}/../KFL/lib/${KLAYGE_PLATFORM_NAME})
	LINK_DIRECTORIES(${KLAYGE_PROJECT_DIR}/lib/${KLAYGE_PLATFORM_NAME})
	IF(KLAYGE_BUILD_PLATFORM_ANDROID)
		LINK_DIRECTORIES(${KLAYGE_PROJECT_DIR}/../glloader/lib/${KLAYGE_PLATFORM_NAME})
		LINK_DIRECTORIES(${KLAYGE_PROJECT_DIR}/../kfont/lib/${KLAYGE_PLATFORM_NAME})
		LINK_DIRECTORIES(${KLAYGE_PROJECT_DIR}/../MeshMLLib/lib/${KLAYGE_PLATFORM_NAME})
		LINK_DIRECTORIES(${KLAYGE_PROJECT_DIR}/../External/7z/lib/${KLAYGE_PLATFORM_NAME})
	ENDIF()
	LINK_DIRECTORIES(${EXTRA_LINKED_DIRS})

	IF(KLAYGE_BUILD_PLATFORM_WINRT)
		SET(EXE_TYPE "WIN32")
	ELSE()
		SET(EXE_TYPE "")
	ENDIF()

	IF(KLAYGE_BUILD_PLATFORM_ANDROID)
		ADD_LIBRARY(${EXE_NAME} SHARED ${SOURCE_FILES} ${KLAYGE_PROJECT_DIR}/../External/android_native_app_glue/android_native_app_glue.c)
	ELSE()
		ADD_EXECUTABLE(${EXE_NAME} ${EXE_TYPE} ${SOURCE_FILES} ${HEADER_FILES} ${RESOURCE_FILES} ${EFFECT_FILES} ${POST_PROCESSORS} ${UI_FILES})
	ENDIF()

	IF(KLAYGE_BUILD_PLATFORM_ANDROID)
		SET(SO_OUTPUT_DIR ${CMAKE_CURRENT_BINARY_DIR}/libs/${KLAYGE_ARCH_NAME})
		SET_TARGET_PROPERTIES(${EXE_NAME} PROPERTIES
			LIBRARY_OUTPUT_DIRECTORY ${SO_OUTPUT_DIR}
			LIBRARY_OUTPUT_DIRECTORY_DEBUG ${SO_OUTPUT_DIR}
			LIBRARY_OUTPUT_DIRECTORY_RELEASE ${SO_OUTPUT_DIR}
			LIBRARY_OUTPUT_DIRECTORY_RELWITHDEBINFO ${SO_OUTPUT_DIR}
			LIBRARY_OUTPUT_DIRECTORY_MINSIZEREL ${SO_OUTPUT_DIR}
		)
	ENDIF()

	SET_TARGET_PROPERTIES(${EXE_NAME} PROPERTIES
		PROJECT_LABEL ${EXE_NAME}
		DEBUG_POSTFIX ${CMAKE_DEBUG_POSTFIX})
	IF(KLAYGE_BUILD_PLATFORM_ANDROID)
		SET_TARGET_PROPERTIES(${EXE_NAME} PROPERTIES OUTPUT_NAME ${EXE_NAME})
	ELSE()
		SET_TARGET_PROPERTIES(${EXE_NAME} PROPERTIES OUTPUT_NAME ${EXE_NAME}${KLAYGE_OUTPUT_SUFFIX})
	ENDIF()
	IF(KLAYGE_BUILD_PLATFORM_WINRT)
		SET_TARGET_PROPERTIES(${EXE_NAME} PROPERTIES VS_WINRT_EXTENSIONS TRUE)
	ENDIF()

	IF(MSVC)
		SET(EXTRA_LINKED_LIBRARIES ${EXTRA_LINKED_LIBRARIES})
	ELSE()
		IF(KLAYGE_BUILD_PLATFORM_ANDROID)
			SET(EXTRA_LINKED_LIBRARIES ${EXTRA_LINKED_LIBRARIES}
				-Wl,--whole-archive debug KlayGE_RenderEngine_OpenGLES${KLAYGE_OUTPUT_SUFFIX}_d optimized KlayGE_RenderEngine_OpenGLES${KLAYGE_OUTPUT_SUFFIX}
				debug KlayGE_Scene_OCTree${KLAYGE_OUTPUT_SUFFIX}_d optimized KlayGE_Scene_OCTree${KLAYGE_OUTPUT_SUFFIX}
				debug KlayGE_InputEngine_MsgInput${KLAYGE_OUTPUT_SUFFIX}_d optimized KlayGE_InputEngine_MsgInput${KLAYGE_OUTPUT_SUFFIX} -Wl,--no-whole-archive
				debug KlayGE_Core${KLAYGE_OUTPUT_SUFFIX}_d optimized KlayGE_Core${KLAYGE_OUTPUT_SUFFIX}
				debug KFL${KLAYGE_OUTPUT_SUFFIX}_d optimized KFL${KLAYGE_OUTPUT_SUFFIX}
				debug glloader_es${KLAYGE_OUTPUT_SUFFIX}_d optimized glloader_es${KLAYGE_OUTPUT_SUFFIX}
				debug kfont${KLAYGE_OUTPUT_SUFFIX}_d optimized kfont${KLAYGE_OUTPUT_SUFFIX}
				debug MeshMLLib${KLAYGE_OUTPUT_SUFFIX}_d optimized MeshMLLib${KLAYGE_OUTPUT_SUFFIX}
				${Boost_CHRONO_LIBRARY} ${Boost_FILESYSTEM_LIBRARY} ${Boost_THREAD_LIBRARY} ${Boost_SYSTEM_LIBRARY}
				debug LZMA${KLAYGE_OUTPUT_SUFFIX}_d optimized LZMA${KLAYGE_OUTPUT_SUFFIX}
				log android)
		ELSE()
			SET(EXTRA_LINKED_LIBRARIES ${EXTRA_LINKED_LIBRARIES}
				debug KlayGE_Core${KLAYGE_OUTPUT_SUFFIX}_d optimized KlayGE_Core${KLAYGE_OUTPUT_SUFFIX}
				debug KFL${KLAYGE_OUTPUT_SUFFIX}_d optimized KFL${KLAYGE_OUTPUT_SUFFIX}
				${Boost_CHRONO_LIBRARY} ${Boost_THREAD_LIBRARY} ${Boost_SYSTEM_LIBRARY})
		ENDIF()
	ENDIF()

	TARGET_LINK_LIBRARIES(${EXE_NAME} ${EXTRA_LINKED_LIBRARIES})

	IF(KLAYGE_BUILD_PLATFORM_WINRT)
		IF(KLAYGE_ARCH_NAME MATCHES "arm_app")
			SET(JIT_PLATFORM_NAME "win_tegra3")
		ELSE()
			SET(JIT_PLATFORM_NAME "pc_dx11")
		ENDIF()
		FOREACH(item ${CONTENT_FILES})
			GET_FILENAME_COMPONENT(ITEM_EXT_NAME ${item} EXT)
			STRING(TOLOWER ${ITEM_EXT_NAME} ITEM_EXT_NAME)
			IF((CMAKE_MAJOR_VERSION STREQUAL "2") AND (CMAKE_MINOR_VERSION STREQUAL "8") AND (CMAKE_PATCH_VERSION STRLESS "12"))
				GET_FILENAME_COMPONENT(ITEM_DIRECTORY ${item} PATH)
			ELSE()
				GET_FILENAME_COMPONENT(ITEM_DIRECTORY ${item} DIRECTORY)
			ENDIF()
			GET_FILENAME_COMPONENT(ITEM_FILE_BASE_NAME ${item} NAME_WE)
			IF(ITEM_EXT_NAME STREQUAL ".kfx")
				ADD_CUSTOM_COMMAND(TARGET ${EXE_NAME} PRE_BUILD COMMAND ${KLAYGE_PROJECT_DIR}/bin/win_x64/FXMLJIT ${JIT_PLATFORM_NAME} ${ITEM_DIRECTORY}/${ITEM_FILE_BASE_NAME}.fxml)
			ELSEIF(ITEM_EXT_NAME STREQUAL ".meshml.model_bin")
				ADD_CUSTOM_COMMAND(TARGET ${EXE_NAME} PRE_BUILD COMMAND ${KLAYGE_PROJECT_DIR}/bin/win_x64/MeshMLJIT -I ${ITEM_DIRECTORY}/${ITEM_FILE_BASE_NAME}.meshml)
			ENDIF()
		ENDFOREACH()
	ELSEIF(KLAYGE_BUILD_PLATFORM_ANDROID)
		FILE(MAKE_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/assets)
		ADD_CUSTOM_COMMAND(TARGET ${EXE_NAME} PRE_BUILD COMMAND ${CMAKE_COMMAND} -E copy ${KLAYGE_PROJECT_DIR}/Samples/media/Common/Assets/drawable-xhdpi-icon.png ${CMAKE_CURRENT_BINARY_DIR}/res/drawable-xhdpi/icon.png)
		ADD_CUSTOM_COMMAND(TARGET ${EXE_NAME} PRE_BUILD COMMAND ${CMAKE_COMMAND} -E copy ${KLAYGE_PROJECT_DIR}/Samples/media/Common/Assets/drawable-hdpi-icon.png ${CMAKE_CURRENT_BINARY_DIR}/res/drawable-hdpi/icon.png)
		ADD_CUSTOM_COMMAND(TARGET ${EXE_NAME} PRE_BUILD COMMAND ${CMAKE_COMMAND} -E copy ${KLAYGE_PROJECT_DIR}/Samples/media/Common/Assets/drawable-mdpi-icon.png ${CMAKE_CURRENT_BINARY_DIR}/res/drawable-mdpi/icon.png)
		ADD_CUSTOM_COMMAND(TARGET ${EXE_NAME} PRE_BUILD COMMAND ${CMAKE_COMMAND} -E copy ${KLAYGE_PROJECT_DIR}/Samples/media/Common/Assets/drawable-ldpi-icon.png ${CMAKE_CURRENT_BINARY_DIR}/res/drawable-ldpi/icon.png)
		FOREACH(item ${CONTENT_FILES} ${POST_PROCESSORS} ${UI_FILES})
			GET_FILENAME_COMPONENT(ITEM_FILE_NAME ${item} NAME)
			GET_FILENAME_COMPONENT(ITEM_EXT_NAME ${item} EXT)
			STRING(TOLOWER ${ITEM_EXT_NAME} ITEM_EXT_NAME)
			IF((CMAKE_MAJOR_VERSION STREQUAL "2") AND (CMAKE_MINOR_VERSION STREQUAL "8") AND (CMAKE_PATCH_VERSION STRLESS "12"))
				GET_FILENAME_COMPONENT(ITEM_DIRECTORY ${item} PATH)
			ELSE()
				GET_FILENAME_COMPONENT(ITEM_DIRECTORY ${item} DIRECTORY)
			ENDIF()
			GET_FILENAME_COMPONENT(ITEM_FILE_BASE_NAME ${item} NAME_WE)
			IF(ITEM_EXT_NAME STREQUAL ".kfx")
				ADD_CUSTOM_COMMAND(TARGET ${EXE_NAME} PRE_BUILD COMMAND ${KLAYGE_PROJECT_DIR}/bin/win_x64/FXMLJIT android_tegra3 ${ITEM_DIRECTORY}/${ITEM_FILE_BASE_NAME}.fxml ${CMAKE_CURRENT_BINARY_DIR}/assets)
			ELSEIF(ITEM_EXT_NAME STREQUAL ".meshml.model_bin")
				ADD_CUSTOM_COMMAND(TARGET ${EXE_NAME} PRE_BUILD COMMAND ${KLAYGE_PROJECT_DIR}/bin/win_x64/MeshMLJIT -I ${ITEM_DIRECTORY}/${ITEM_FILE_BASE_NAME}.meshml -T ${CMAKE_CURRENT_BINARY_DIR}/assets)
			ELSE()
				ADD_CUSTOM_COMMAND(TARGET ${EXE_NAME} PRE_BUILD COMMAND ${CMAKE_COMMAND} -E copy ${item} ${CMAKE_CURRENT_BINARY_DIR}/assets/${ITEM_FILE_NAME})
			ENDIF()
		ENDFOREACH()

		ADD_CUSTOM_COMMAND(TARGET ${EXE_NAME} PRE_BUILD COMMAND android update project -p . -s -t android-${ANDROID_NATIVE_API_LEVEL} -n KlayGE_${PROJ_NAME})
		
		ADD_CUSTOM_COMMAND(TARGET ${EXE_NAME} POST_BUILD COMMAND ant debug)
		ADD_CUSTOM_COMMAND(TARGET ${EXE_NAME} POST_BUILD COMMAND adb install -r bin\\KlayGE_${PROJ_NAME}-debug.apk)
	ENDIF()

	IF(NOT KLAYGE_BUILD_PLATFORM_WINRT AND NOT KLAYGE_BUILD_PLATFORM_ANDROID)
		ADD_POST_BUILD(${EXE_NAME} "")

		INSTALL(TARGETS ${EXE_NAME}
			RUNTIME DESTINATION ${KLAYGE_BIN_DIR}
			LIBRARY DESTINATION ${KLAYGE_BIN_DIR}
			ARCHIVE DESTINATION ${KLAYGE_OUTPUT_DIR}
		)

		IF(MSVC)
			CREATE_VCPROJ_USERFILE(${EXE_NAME})
		ENDIF()
	ENDIF()
ENDMACRO(SETUP_SAMPLE)

ADD_SUBDIRECTORY(Common)
ADD_SUBDIRECTORY(AtmosphericScattering)
ADD_SUBDIRECTORY(CascadedShadowMap)
ADD_SUBDIRECTORY(CausticsMap)
ADD_SUBDIRECTORY(DeferredRendering)
ADD_SUBDIRECTORY(DetailedSurface)
ADD_SUBDIRECTORY(EnvLighting)
ADD_SUBDIRECTORY(GlobalIllumination)
ADD_SUBDIRECTORY(GPUParticleSystem)
ADD_SUBDIRECTORY(JudaTexViewer)
ADD_SUBDIRECTORY(ModelViewer)
IF(NOT KLAYGE_BUILD_PLATFORM_WINRT AND NOT KLAYGE_BUILD_PLATFORM_ANDROID)
ADD_SUBDIRECTORY(MotionBlurDoF)
ENDIF()
ADD_SUBDIRECTORY(Ocean)
ADD_SUBDIRECTORY(OrderIndependentTransparency)
ADD_SUBDIRECTORY(ParticleEditor)
ADD_SUBDIRECTORY(PostProcessing)
ADD_SUBDIRECTORY(ProceduralTex)
ADD_SUBDIRECTORY(Reflection)
IF(NOT KLAYGE_BUILD_PLATFORM_WINRT AND NOT KLAYGE_BUILD_PLATFORM_ANDROID)
ADD_SUBDIRECTORY(ScenePlayer)
ENDIF()
ADD_SUBDIRECTORY(ShadowCubeMap)
ADD_SUBDIRECTORY(SSSSS)
ADD_SUBDIRECTORY(SubSurface)
ADD_SUBDIRECTORY(Text)
ADD_SUBDIRECTORY(VideoTexture)

<?xml version='1.0'?>

<effect>
	<include name="util.fxml"/>
	
	<parameter type="float4x4" name="matViewProj"/>
	<parameter type="float4" name="color"/>

	<parameter type="float3" name="pos_center"/>
	<parameter type="float3" name="pos_extent"/>

	<shader>
		<![CDATA[
void HelperVS(float4 position : POSITION,
			out float4 oPosition : SV_Position)
{
	position = float4(position.xyz * pos_extent + pos_center, 1);
	oPosition = mul(position, matViewProj);
}

float4 HelperPS() : SV_Target0
{
	return color;
}
		]]>
	</shader>
	
	<technique name="PointTec">
		<pass name="p0">
			<state name="polygon_mode" value="point"/>
			<state name="cull_mode" value="none"/>

			<state name="vertex_shader" value="HelperVS()"/>
			<state name="pixel_shader" value="HelperPS()"/>
		</pass>
	</technique>
	
	<technique name="LineTec">
		<pass name="p0">
			<state name="polygon_mode" value="line"/>
			<state name="cull_mode" value="none"/>

			<state name="vertex_shader" value="HelperVS()"/>
			<state name="pixel_shader" value="HelperPS()"/>
		</pass>
	</technique>
	
	<technique name="TriangleTec">
		<pass name="p0">
			<state name="polygon_mode" value="line"/>
			<state name="cull_mode" value="none"/>

			<state name="vertex_shader" value="HelperVS()"/>
			<state name="pixel_shader" value="HelperPS()"/>
		</pass>
	</technique>
	
	<technique name="BoxTec">
		<pass name="p0">
			<state name="polygon_mode" value="line"/>
			<state name="cull_mode" value="none"/>

			<state name="vertex_shader" value="HelperVS()"/>
			<state name="pixel_shader" value="HelperPS()"/>
		</pass>
	</technique>

	<parameter type="float4x4" name="inv_mvp"/>
	<parameter type="textureCUBE" name="skybox_tex"/>
	<parameter type="textureCUBE" name="skybox_C_tex"/>
	<parameter type="sampler" name="skybox_cubeMapSampler">
		<state name="filtering" value="min_mag_linear_mip_point"/>
		<state name="address_u" value="clamp"/>
		<state name="address_v" value="clamp"/>
		<state name="address_w" value="clamp"/>
	</parameter>

	<shader>
		<![CDATA[
void SkyBoxVS(float4 pos : POSITION,
			out float3 texcoord0 : TEXCOORD0,
			out float4 oPos : SV_Position)
{
	oPos = pos;
	texcoord0 = mul(pos, inv_mvp).xyz;
}

float4 SkyBoxPS(float3 texCoord0 : TEXCOORD0) : SV_Target
{
	return skybox_tex.Sample(skybox_cubeMapSampler, texCoord0);
}

float4 HDRSkyBoxPS(float3 texCoord0 : TEXCOORD0) : SV_Target
{
	float3 rgb = decode_hdr_yc(skybox_tex.Sample(skybox_cubeMapSampler, texCoord0).r,
					skybox_C_tex.Sample(skybox_cubeMapSampler, texCoord0)).rgb;
	
	return float4(rgb, 1);
}
		]]>
	</shader>
	
	<technique name="SkyBoxTec">
		<pass name="p0">
			<state name="cull_mode" value="none"/>
			<state name="depth_write_mask" value="0"/>
			<state name="depth_func" value="equal"/>

			<state name="vertex_shader" value="SkyBoxVS()"/>
			<state name="pixel_shader" value="SkyBoxPS()"/>
		</pass>
	</technique>
	<technique name="HDRSkyBoxTec">
		<pass name="p0">
			<state name="cull_mode" value="none"/>
			<state name="depth_write_mask" value="0"/>
			<state name="depth_func" value="equal"/>

			<state name="vertex_shader" value="SkyBoxVS()"/>
			<state name="pixel_shader" value="HDRSkyBoxPS()"/>
		</pass>
	</technique>
</effect>

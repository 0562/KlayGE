<?xml version='1.0'?>

<effect>
	<include name="PostProcess.fxml"/>
	<include name="Copy.fxml"/>

	<shader>
		<![CDATA[
float4 BrightPassPS(float2 tc : TEXCOORD0) : SV_Target
{
	float3 LUM_WEIGHT = float3(0.2126f, 0.7152f, 0.0722f);

	float4 clr = src_tex.Sample(bilinear_sampler, tc);
	float lum = dot(clr.xyz, LUM_WEIGHT);
	if (lum < 1.5f)
	{
		clr.xyz = 0;
	}
	return clr;
}

float4 SqrBrightPS(float2 tc : TEXCOORD0) : SV_Target
{
	float4 clr = src_tex.Sample(bilinear_sampler, tc);
	return clr * (clr / 3);
}
		]]>
	</shader>

	<technique name="BrightPass">
		<pass name="p0">
			<state name="depth_enable" value="false"/>
			<state name="depth_write_mask" value="0"/>

			<state name="vertex_shader" value="PostProcessVS()"/>
			<state name="pixel_shader" value="BrightPassPS()"/>
		</pass>
	</technique>

	<technique name="SqrBright">
		<pass name="p0">
			<state name="depth_enable" value="false"/>
			<state name="depth_write_mask" value="0"/>

			<state name="vertex_shader" value="PostProcessVS()"/>
			<state name="pixel_shader" value="SqrBrightPS()"/>
		</pass>
	</technique>
	
	
	<parameter type="texture2D" name="glow_tex_0"/>
	<parameter type="texture2D" name="glow_tex_1"/>
	<parameter type="texture2D" name="glow_tex_2"/>	

	<shader>
		<![CDATA[
float4 GlowMergerPS(float2 tex : TEXCOORD0) : SV_Target
{
	float4 clr0 = glow_tex_0.Sample(bilinear_sampler, tex);
	float4 clr1 = glow_tex_1.Sample(bilinear_sampler, tex);
	float4 clr2 = glow_tex_2.Sample(bilinear_sampler, tex);
	
	return clr0 * 2.0f + clr1 * 1.15f + clr2 * 0.45f;
}
		]]>
	</shader>

	<technique name="GlowMerger">
		<pass name="p0">
			<state name="depth_enable" value="false"/>
			<state name="depth_write_mask" value="0"/>

			<state name="vertex_shader" value="PostProcessVS()"/>
			<state name="pixel_shader" value="GlowMergerPS()"/>
		</pass>
	</technique>
</effect>

<?xml version='1.0'?>

<effect>
	<include name="PostProcess.fxml"/>

	<parameter type="sampler" name="linear_sampler">
		<state name="filtering" value="min_mag_linear_mip_point"/>
		<state name="address_u" value="clamp"/>
		<state name="address_v" value="clamp"/>
	</parameter>

	<parameter type="sampler" name="point_sampler">
		<state name="filtering" value="min_mag_mip_point"/>
		<state name="address_u" value="clamp"/>
		<state name="address_v" value="clamp"/>
	</parameter>

	<parameter type="texture2D" name="src_tex"/>
	<parameter type="texture2D" name="lum_tex"/>
	<parameter type="texture2D" name="bloom_tex"/>

	<shader>
		<![CDATA[
float EyeAdaption(float lum)
{
	return lerp(0.2f, lum, 0.5f);
}

float3 ToneMapping(float3 color, float3 blur, float adapted_lum)
{
	const float3 RGB_TO_LUM = float3(0.2126f, 0.7152f, 0.0722f);
	const float3 BLUE_SHIFT = float3(0.4f, 0.4f, 0.7f);

	color += blur * 0.25f;
	
	float lum = dot(color, RGB_TO_LUM);
	
	// martin's modified blue shift
	color = lerp(lum * BLUE_SHIFT, color, saturate(8.0f * lum));

	// tone mapping
	float adapted_lum_dest = 3 / (max(0.1f, 1 + 10 * EyeAdaption(adapted_lum)));

	//color = 1 - exp(-adapted_lum_dest * pow(color, 1.15f)); // better contrast but slower
	color = 1 - exp(-adapted_lum_dest * color); 

	return color;
}

void ToneMapping30VS(float4 pos : POSITION,
					out float3 oTex : TEXCOORD0,
					out float4 oPos : SV_Position)
{
	oPos = pos;

	oTex.xy = TexCoordFromPos(pos);
	oTex.z = max(0.001f, lum_tex.SampleLevel(point_sampler, 0.5f.xx, 0).r);
}

float4 ToneMapping30PS(float3 iTex : TEXCOORD0) : SV_Target
{
	return float4(ToneMapping(src_tex.Sample(linear_sampler, iTex.xy).rgb, bloom_tex.Sample(linear_sampler, iTex.xy).rgb, iTex.z), 1);
}


float4 ToneMapping20PS(float2 iTex : TEXCOORD0) : SV_Target
{
	float lum = max(0.001f, lum_tex.Sample(point_sampler, 0.5f.xx).r);
	return float4(ToneMapping(src_tex.Sample(linear_sampler, iTex).rgb, bloom_tex.Sample(linear_sampler, iTex).rgb, lum), 1);
}
		]]>
	</shader>
	
	<technique name="ToneMapping30">
		<pass name="p0">
			<state name="depth_enable" value="false"/>
			<state name="depth_write_mask" value="0"/>

			<state name="vertex_shader" value="ToneMapping30VS()"/>
			<state name="pixel_shader" value="ToneMapping30PS()"/>
		</pass>
	</technique>
	
	<technique name="ToneMapping20">
		<pass name="p0">
			<state name="depth_enable" value="false"/>
			<state name="depth_write_mask" value="0"/>

			<state name="vertex_shader" value="PostProcessVS()"/>
			<state name="pixel_shader" value="ToneMapping20PS()"/>
		</pass>
	</technique>
</effect>

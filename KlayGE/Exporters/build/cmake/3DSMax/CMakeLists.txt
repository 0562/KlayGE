PROJECT(3DSMaxMeshMLPlugin)

CMAKE_MINIMUM_REQUIRED(VERSION 2.8.6)

IF(COMMAND cmake_policy)
	CMAKE_POLICY(SET CMP0003 NEW)
ENDIF(COMMAND cmake_policy)

SET(KLAYGE_3DSMAX_PATH "" CACHE STRING "Path of 3DSMax.")
SET(KLAYGE_3DSMAX_SDK_PATH "" CACHE STRING "Path of 3DSMax SDK.")

SET_PROPERTY(GLOBAL PROPERTY USE_FOLDERS ON)

IF(WIN32)
	IF(MSVC)
		SET(CMAKE_C_FLAGS "/DWIN32 /D_WINDOWS /W4 /WX /GR /EHsc")
		SET(CMAKE_CXX_FLAGS "/DWIN32 /D_WINDOWS /W4 /WX /GR /EHsc")
		SET(CMAKE_SHARED_LINKER_FLAGS "")
		SET(CMAKE_SHARED_LINKER_FLAGS_DEBUG "/DEBUG /INCREMENTAL")
		SET(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO "/DEBUG /INCREMENTAL")

		SET(KLAYGE_COMPILER_NAME "vc")
		IF(MSVC_VERSION GREATER 1600)
			SET(KLAYGE_COMPILER_VERSION "11")
		ELSEIF(MSVC_VERSION GREATER 1500)
			SET(KLAYGE_COMPILER_VERSION "10")
		ELSEIF(MSVC_VERSION GREATER 1400)
			SET(KLAYGE_COMPILER_VERSION "9")
		ENDIF()

		SET(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} /fp:fast /GS-")
		SET(CMAKE_CXX_FLAGS_RELWITHDEBINFO "${CMAKE_CXX_FLAGS_RELWITHDEBINFO} /fp:fast /GS-")
		SET(CMAKE_CXX_FLAGS_MINSIZEREL "${CMAKE_CXX_FLAGS_MINSIZEREL} /fp:fast /GS-")

		IF(MSVC_VERSION GREATER 1500)
			SET(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} /MP")
			SET(CMAKE_CXX_FLAGS_RELWITHDEBINFO "${CMAKE_CXX_FLAGS_RELWITHDEBINFO} /MP")
			SET(CMAKE_CXX_FLAGS_MINSIZEREL "${CMAKE_CXX_FLAGS_MINSIZEREL} /MP")

			SET(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} /LARGEADDRESSAWARE")
		ENDIF()
		IF(MSVC_VERSION GREATER 1600)
			SET(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} /Qpar")
			SET(CMAKE_CXX_FLAGS_RELWITHDEBINFO "${CMAKE_CXX_FLAGS_RELWITHDEBINFO} /Qpar")
			SET(CMAKE_CXX_FLAGS_MINSIZEREL "${CMAKE_CXX_FLAGS_MINSIZEREL} /Qpar")
		ENDIF()
	ENDIF()
	IF(MINGW)
		SET(KLAYGE_COMPILER_NAME "mgw")
		SET(KLAYGE_COMPILER_VERSION "")
	ENDIF()
ELSE()
	SET(KLAYGE_COMPILER_NAME "gcc")
	SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -W -Wall -Wno-unused")
ENDIF()

IF(WIN32)
	IF(CMAKE_GENERATOR MATCHES "Win64")
		SET(KLAYGE_ARCH_NAME "x64")
		SET(KLAYGE_VS_PLATFORM_NAME "x64")
	ELSE()
		SET(KLAYGE_ARCH_NAME "x86")
		SET(KLAYGE_VS_PLATFORM_NAME "Win32")
	ENDIF()
	SET(KLAYGE_PLATFORM_NAME "win")
ENDIF()
IF(UNIX)
	IF(CMAKE_SYSTEM_PROCESSOR MATCHES "x86_64")
		SET(KLAYGE_ARCH_NAME "x64")
	ELSE()
		SET(KLAYGE_ARCH_NAME "x86")
	ENDIF()
	SET(KLAYGE_PLATFORM_NAME "linux")
ENDIF()
SET(KLAYGE_PLATFORM_NAME ${KLAYGE_PLATFORM_NAME}_${KLAYGE_ARCH_NAME})

# Set postfix
SET(CMAKE_DEBUG_POSTFIX "_d" CACHE STRING "add a postfix, usually d on windows")
SET(CMAKE_RELEASE_POSTFIX "" CACHE STRING "add a postfix, usually empty on windows")
SET(CMAKE_RELWITHDEBINFO_POSTFIX "" CACHE STRING "add a postfix, usually empty on windows")
SET(CMAKE_MINSIZEREL_POSTFIX "" CACHE STRING "add a postfix, usually empty on windows")


# Main settings and dependencies
FIND_PATH(KLAYGE_PROJECT_DIR klayge_logo.ico PATHS ../../../../)

SET(KLAYGE_3DSMAX_PLUGIN_DIR "${KLAYGE_3DSMAX_PATH}/plugins")


# create vcproj.user file for Visual Studio to set debug working directory
FUNCTION(KLAYGE_CREATE_VCPROJ_USERFILE TARGETNAME)
	IF(MSVC)
		SET(SYSTEM_NAME $ENV{USERDOMAIN})
		SET(USER_NAME $ENV{USERNAME})

		IF(MSVC_VERSION GREATER 1500)
			CONFIGURE_FILE(
				${KLAYGE_PROJECT_DIR}/build/cmake/VisualStudio2010UserFile.vcxproj.user.in
				${CMAKE_CURRENT_BINARY_DIR}/${TARGETNAME}.vcxproj.user
				@ONLY
			)
		ELSEIF(MSVC_VERSION GREATER 1400)
			CONFIGURE_FILE(
				${KLAYGE_PROJECT_DIR}/build/cmake/VisualStudio2008UserFile.vcproj.user.in
				${CMAKE_CURRENT_BINARY_DIR}/${TARGETNAME}.vcproj.${SYSTEM_NAME}.${USER_NAME}.user
				@ONLY
			)
		ELSEIF(MSVC_VERSION GREATER 1300)
			CONFIGURE_FILE(
				${KLAYGE_PROJECT_DIR}/build/cmake/VisualStudio2005UserFile.vcproj.user.in
				${CMAKE_CURRENT_BINARY_DIR}/${TARGETNAME}.vcproj.${SYSTEM_NAME}.${USER_NAME}.user
				@ONLY
			)
		ENDIF()
	ENDIF()
ENDFUNCTION()


SET(PLUGIN_NAME "MeshML")

SET(SOURCE_FILES
	${KLAYGE_PROJECT_DIR}/Exporters/src/3DSMax/export_main.cpp
	${KLAYGE_PROJECT_DIR}/Exporters/src/3DSMax/mesh_extractor.cpp
	${KLAYGE_PROJECT_DIR}/Exporters/src/3DSMax/meshml.cpp
	${KLAYGE_PROJECT_DIR}/Exporters/src/3DSMax/util.cpp
	${KLAYGE_PROJECT_DIR}/Exporters/src/3DSMax/export.def
)

SET(HEADER_FILES
	${KLAYGE_PROJECT_DIR}/Exporters/src/3DSMax/export_main.hpp
	${KLAYGE_PROJECT_DIR}/Exporters/src/3DSMax/mesh_extractor.hpp
	${KLAYGE_PROJECT_DIR}/Exporters/src/3DSMax/meshml.hpp
	${KLAYGE_PROJECT_DIR}/Exporters/src/3DSMax/resource.h
	${KLAYGE_PROJECT_DIR}/Exporters/src/3DSMax/util.hpp
)

SET(RESOURCE_FILES
	${KLAYGE_PROJECT_DIR}/Exporters/src/3DSMax/meshml.rc
)

SOURCE_GROUP("Source Files" FILES ${SOURCE_FILES})
SOURCE_GROUP("Header Files" FILES ${HEADER_FILES})
SOURCE_GROUP("Resource Files" FILES ${RESOURCE_FILES})

INCLUDE_DIRECTORIES(${KLAYGE_3DSMAX_SDK_PATH}/maxsdk/include)
INCLUDE_DIRECTORIES(${KLAYGE_PROJECT_DIR}/../External/boost)
INCLUDE_DIRECTORIES(${KLAYGE_PROJECT_DIR}/../KFL/include)
INCLUDE_DIRECTORIES(${KLAYGE_PROJECT_DIR}/Core/Include)
INCLUDE_DIRECTORIES(${KLAYGE_PROJECT_DIR}/../MeshMLLib/include)
LINK_DIRECTORIES(${KLAYGE_3DSMAX_SDK_PATH}/maxsdk/${KLAYGE_ARCH_NAME}/lib)
LINK_DIRECTORIES(${KLAYGE_PROJECT_DIR}/../KFL/lib/${KLAYGE_PLATFORM_NAME})
LINK_DIRECTORIES(${KLAYGE_PROJECT_DIR}/../MeshMLLib/lib/${KLAYGE_PLATFORM_NAME})

ADD_LIBRARY(${PLUGIN_NAME} SHARED ${SOURCE_FILES} ${HEADER_FILES} ${RESOURCE_FILES})

SET_TARGET_PROPERTIES(${PLUGIN_NAME} PROPERTIES
	PROJECT_LABEL ${PLUGIN_NAME}
	DEBUG_POSTFIX ${CMAKE_DEBUG_POSTFIX}
	OUTPUT_NAME ${PLUGIN_NAME}
	SUFFIX ".dle"
)

SET(EXTRA_LINKED_LIBRARIES core maxutil geom mesh)

TARGET_LINK_LIBRARIES(${PLUGIN_NAME}
	debug MeshMLLib_${KLAYGE_COMPILER_NAME}_${KLAYGE_ARCH_NAME}${CMAKE_DEBUG_POSTFIX}
	optimized MeshMLLib_${KLAYGE_COMPILER_NAME}_${KLAYGE_ARCH_NAME}
	${EXTRA_LINKED_LIBRARIES})

ADD_CUSTOM_COMMAND(TARGET ${PLUGIN_NAME}
	POST_BUILD
	COMMAND ${CMAKE_COMMAND} -E copy_if_different $<TARGET_FILE_DIR:${PLUGIN_NAME}>/$<TARGET_FILE_NAME:${PLUGIN_NAME}> ${KLAYGE_3DSMAX_PLUGIN_DIR})

 
INSTALL(TARGETS ${PLUGIN_NAME}
	RUNTIME DESTINATION ${KLAYGE_3DSMAX_PLUGIN_DIR}
	LIBRARY DESTINATION ${KLAYGE_3DSMAX_PLUGIN_DIR}
)

KLAYGE_CREATE_VCPROJ_USERFILE(${PLUGIN_NAME})

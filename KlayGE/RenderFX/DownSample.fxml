<?xml version='1.0'?>

<effect>
	<include name="PostProcess.fxml"/>

	<parameter type="sampler2D" name="src_sampler">
		<state name="filtering" value="bilinear"/>
		<state name="address_u" value="clamp"/>
		<state name="address_v" value="clamp"/>
	</parameter>

	<shader>
		<![CDATA[
half4 BrightPass(half4 c)
{
	const float BRIGHT_THRESHOLD = 0.5f;
	if (any(c.rgb > BRIGHT_THRESHOLD))
	{
		return c;
	}
	else
	{
		return 0;
	}
}

float4 DownsamplePS(float2 tex : TEXCOORD0) : COLOR
{
	return tex2D(src_sampler, tex);
}

float4 BrightPassDownsamplePS(float2 tex : TEXCOORD0) : COLOR
{
	return BrightPass(tex2D(src_sampler, tex));
}
		]]>
	</shader>
	
	<technique name="Downsample">
		<pass name="p0">
			<state name="depth_enable" value="false"/>
			<state name="depth_write_mask" value="0"/>

			<state name="vertex_shader" value="PostProcessVS()"/>
			<state name="pixel_shader" value="DownsamplePS()"/>
		</pass>
	</technique>

	<technique name="BrightPassDownsample">
		<pass name="p0">
			<state name="depth_enable" value="false"/>
			<state name="depth_write_mask" value="0"/>

			<state name="vertex_shader" value="PostProcessVS()"/>
			<state name="pixel_shader" value="BrightPassDownsamplePS()"/>
		</pass>
	</technique>
</effect>

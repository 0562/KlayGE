<?xml version='1.0'?>

<effect>
	<include name="2D.fxml"/>

	<cbuffer name="per_frame">
		<parameter type="float2" name="half_width_height"/>
		<parameter type='float4' name='texel_to_pixel_offset'/>
	</cbuffer>

	<parameter type="float4x4" name="mvp"/>

	<parameter type="sampler2D" name="distance_sampler">
		<state name="filtering" value="min_mag_linear_mip_point"/>
		<state name="address_u" value="clamp"/>
		<state name="address_v" value="clamp"/>
	</parameter>
	<parameter type="float2" name="distance_base_scale"/>

	<shader>
		<![CDATA[
void Font2DVS(float4 position : POSITION,
			float4 color : COLOR0,
			float2 texCoord : TEXCOORD0,

			out float4 oPosition : POSITION,
			out float2 oTexCoord : TEXCOORD0,
			out float4 oColor : COLOR)
{
	oPosition = Transform2D(position, half_width_height);
	oPosition += texel_to_pixel_offset;

	oColor = color;
	oTexCoord = texCoord;
}

void Font3DVS(float4 position : POSITION,
			float4 color : COLOR0,
			float2 texCoord : TEXCOORD0,

			out float4 oPosition : POSITION,
			out float2 oTexCoord : TEXCOORD0,
			out float4 oColor : COLOR)
{
	oPosition = mul(position, mvp);

	oColor = color;
	oTexCoord = texCoord;
}

float4 FontPS(float4 pos : POSITION, float2 texCoord : TEXCOORD0, float4 clr : COLOR) : COLOR0
{
	clr.a = tex2D(distance_sampler, texCoord).r * distance_base_scale.y + distance_base_scale.x;
	return clr;
}
		]]>
	</shader>

	<technique name="Font2DTec">
		<pass name="p0">
			<state name="blend_enable" value="true"/>
			<state name="src_blend" value="src_alpha"/>
			<state name="dest_blend" value="inv_src_alpha"/>

			<state name="depth_enable" value="false"/>
			<state name="depth_write_mask" value="0"/>
			
			<state name="vertex_shader" value="Font2DVS()"/>
			<state name="pixel_shader" value="FontPS()"/>
		</pass>
	</technique>

	<technique name="Font3DTec">
		<pass name="p0">
			<state name="blend_enable" value="true"/>
			<state name="src_blend" value="src_alpha"/>
			<state name="dest_blend" value="inv_src_alpha"/>

			<state name="depth_enable" value="false"/>
			<state name="depth_write_mask" value="0"/>

			<state name="vertex_shader" value="Font3DVS()"/>
			<state name="pixel_shader" value="FontPS()"/>
		</pass>
	</technique>
</effect>

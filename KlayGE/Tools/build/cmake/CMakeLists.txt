PROJECT(Tools)

CMAKE_MINIMUM_REQUIRED(VERSION 2.4.7)

IF(COMMAND cmake_policy)
	CMAKE_POLICY(SET CMP0003 NEW)
ENDIF(COMMAND cmake_policy)

SET_PROPERTY(GLOBAL PROPERTY USE_FOLDERS ON)

IF(WIN32)
	IF(MSVC)
		ADD_DEFINITIONS(-DUNICODE -D_UNICODE)

		SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /W4")

		SET(KLAYGE_COMPILER_NAME "vc")
		IF(MSVC_VERSION GREATER 1600)
			SET(KLAYGE_COMPILER_VERSION "11")
		ELSEIF(MSVC_VERSION GREATER 1500)
			SET(KLAYGE_COMPILER_VERSION "10")
		ELSEIF(MSVC_VERSION GREATER 1400)
			SET(KLAYGE_COMPILER_VERSION "9")
		ENDIF()

		SET(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} /fp:fast /GS-")
		SET(CMAKE_CXX_FLAGS_RELWITHDEBINFO "${CMAKE_CXX_FLAGS_RELWITHDEBINFO} /fp:fast /GS-")
		SET(CMAKE_CXX_FLAGS_MINSIZEREL "${CMAKE_CXX_FLAGS_MINSIZEREL} /fp:fast /GS-")

		IF(MSVC_VERSION GREATER 1500)
			SET(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} /MP")
			SET(CMAKE_CXX_FLAGS_RELWITHDEBINFO "${CMAKE_CXX_FLAGS_RELWITHDEBINFO} /MP")
			SET(CMAKE_CXX_FLAGS_MINSIZEREL "${CMAKE_CXX_FLAGS_MINSIZEREL} /MP")
		ENDIF()
		IF(MSVC_VERSION GREATER 1600)
			SET(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} /ZW:nostdlib /Qpar")
			SET(CMAKE_CXX_FLAGS_RELWITHDEBINFO "${CMAKE_CXX_FLAGS_RELWITHDEBINFO} /ZW:nostdlib /Qpar")
			SET(CMAKE_CXX_FLAGS_MINSIZEREL "${CMAKE_CXX_FLAGS_MINSIZEREL} /ZW:nostdlib /Qpar")
		ENDIF()
	ENDIF()
	IF(MINGW)
		SET(KLAYGE_COMPILER_NAME "mgw")
		SET(KLAYGE_COMPILER_VERSION "")
	ENDIF()
ELSE()
	SET(KLAYGE_COMPILER_NAME "gcc")
	SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -W -Wall -Wno-unused")
ENDIF()

IF(WIN32)
	IF(CMAKE_GENERATOR MATCHES "Win64")
		SET(KLAYGE_ARCH_NAME "x64")
		SET(KLAYGE_VS_PLATFORM_NAME "x64")
	ELSE()
		SET(KLAYGE_ARCH_NAME "x86")
		SET(KLAYGE_VS_PLATFORM_NAME "Win32")
	ENDIF()
	SET(KLAYGE_PLATFORM_NAME "win")
ENDIF()
IF(UNIX)
	IF(CMAKE_SYSTEM_PROCESSOR MATCHES "x86_64")
		SET(KLAYGE_ARCH_NAME "x64")
	ELSE()
		SET(KLAYGE_ARCH_NAME "x86")
	ENDIF()
	SET(KLAYGE_PLATFORM_NAME "linux")
ENDIF()
SET(KLAYGE_PLATFORM_NAME ${KLAYGE_PLATFORM_NAME}_${KLAYGE_ARCH_NAME})

# Set postfix
SET(CMAKE_DEBUG_POSTFIX "_d" CACHE STRING "add a postfix, usually d on windows")
SET(CMAKE_RELEASE_POSTFIX "" CACHE STRING "add a postfix, usually empty on windows")
SET(CMAKE_RELWITHDEBINFO_POSTFIX "" CACHE STRING "add a postfix, usually empty on windows")
SET(CMAKE_MINSIZEREL_POSTFIX "" CACHE STRING "add a postfix, usually empty on windows")


# Main settings and dependencies
SET(KLAYGE_CORELIB_NAME KlayGE_Core)  # Dependency of all other targets
FIND_PATH(KLAYGE_PROJECT_DIR klayge_logo.ico PATHS ../../../)

SET(KLAYGE_OUTPUT_DIR "${KLAYGE_PROJECT_DIR}/lib/${KLAYGE_PLATFORM_NAME}")
SET(KLAYGE_BIN_DIR "${KLAYGE_PROJECT_DIR}/bin/${KLAYGE_PLATFORM_NAME}")


# create vcproj.user file for Visual Studio to set debug working directory
FUNCTION(KLAYGE_CREATE_VCPROJ_USERFILE TARGETNAME)
	IF(MSVC)
		SET(SYSTEM_NAME $ENV{USERDOMAIN})
		SET(USER_NAME $ENV{USERNAME})

		IF(MSVC_VERSION GREATER 1500)
			CONFIGURE_FILE(
				${KLAYGE_PROJECT_DIR}/Build/cmake/VisualStudio2010UserFile.vcxproj.user.in
				${CMAKE_CURRENT_BINARY_DIR}/${TARGETNAME}.vcxproj.user
				@ONLY
			)
		ELSEIF(MSVC_VERSION GREATER 1400)
			CONFIGURE_FILE(
				${KLAYGE_PROJECT_DIR}/Build/cmake/VisualStudio2008UserFile.vcproj.user.in
				${CMAKE_CURRENT_BINARY_DIR}/${TARGETNAME}.vcproj.${SYSTEM_NAME}.${USER_NAME}.user
				@ONLY
			)
		ELSEIF(MSVC_VERSION GREATER 1300)
			CONFIGURE_FILE(
				${KLAYGE_PROJECT_DIR}/Build/cmake/VisualStudio2005UserFile.vcproj.user.in
				${CMAKE_CURRENT_BINARY_DIR}/${TARGETNAME}.vcproj.${SYSTEM_NAME}.${USER_NAME}.user
				@ONLY
			)
		ENDIF()
	ENDIF()
ENDFUNCTION()

# Required variables:
# - SOURCE_FILES/HEADER_FILES/RESOURCE_FILES
# - EFFECT_FILES/POST_PROCESSORS/UI_FILES
# - EXTRA_INCLUDE_DIRS: dependencies required besides KlarGE_Core and boost
# - EXTRA_LINKED_LIBRARIES: dependencies required besides KlarGE_Core and boost
#
MACRO(SETUP_TOOL EXE_NAME)
	SET(RESOURCE_FILES
		${KLAYGE_PROJECT_DIR}/Tools/media/Common/KlayGETool.rc
		${KLAYGE_PROJECT_DIR}/klayge_logo.ico
	)

	SOURCE_GROUP("Source Files" FILES ${SOURCE_FILES})
	SOURCE_GROUP("Header Files" FILES ${HEADER_FILES})
	SOURCE_GROUP("Resource Files" FILES ${RESOURCE_FILES})
	SOURCE_GROUP("Effect Files" FILES ${EFFECT_FILES})
	SOURCE_GROUP("Post Processors" FILES ${POST_PROCESSORS})
	SOURCE_GROUP("UI Files" FILES ${UI_FILES})

	INCLUDE_DIRECTORIES(${KLAYGE_PROJECT_DIR}/../External/boost)
	INCLUDE_DIRECTORIES(${KLAYGE_PROJECT_DIR}/Core/Include)
	INCLUDE_DIRECTORIES(${EXTRA_INCLUDE_DIRS})
	LINK_DIRECTORIES(${KLAYGE_PROJECT_DIR}/../External/boost/lib_${KLAYGE_COMPILER_NAME}${KLAYGE_COMPILER_VERSION}_${KLAYGE_ARCH_NAME}/lib)
	LINK_DIRECTORIES(${KLAYGE_PROJECT_DIR}/lib/${KLAYGE_PLATFORM_NAME})
	LINK_DIRECTORIES(${EXTRA_LINKED_DIRS})

	ADD_EXECUTABLE(${EXE_NAME} ${SOURCE_FILES} ${HEADER_FILES} ${RESOURCE_FILES} )
	ADD_DEPENDENCIES(${EXE_NAME} ${KLAYGE_CORELIB_NAME})

	SET_TARGET_PROPERTIES(${EXE_NAME} PROPERTIES PROJECT_LABEL "${EXE_NAME}")
	SET_TARGET_PROPERTIES(${EXE_NAME} PROPERTIES DEBUG_POSTFIX "${CMAKE_DEBUG_POSTFIX}")
	SET_TARGET_PROPERTIES(${EXE_NAME} PROPERTIES OUTPUT_NAME "${EXE_NAME}")

	IF(MSVC)
		SET(EXTRA_LINKED_LIBRARIES ${EXTRA_LINKED_LIBRARIES})
	ELSE()
		SET(EXTRA_LINKED_LIBRARIES boost_system ${EXTRA_LINKED_LIBRARIES})
	ENDIF()

	TARGET_LINK_LIBRARIES(${EXE_NAME} ${EXTRA_LINKED_LIBRARIES} )


	GET_PROPERTY(OUT_LOCATION_DEBUG TARGET ${EXE_NAME} PROPERTY LOCATION_DEBUG)
	ADD_CUSTOM_COMMAND(TARGET ${EXE_NAME}
		POST_BUILD
		COMMAND IF EXIST ${OUT_LOCATION_DEBUG} ${CMAKE_COMMAND} -E copy_if_different ${OUT_LOCATION_DEBUG} ${KLAYGE_BIN_DIR})

	GET_PROPERTY(OUT_LOCATION_RELWITHDEBINFO TARGET ${EXE_NAME} PROPERTY LOCATION_RELWITHDEBINFO)
	ADD_CUSTOM_COMMAND(TARGET ${EXE_NAME}
		POST_BUILD
		COMMAND IF EXIST ${OUT_LOCATION_RELWITHDEBINFO} ${CMAKE_COMMAND} -E copy_if_different ${OUT_LOCATION_RELWITHDEBINFO} ${KLAYGE_BIN_DIR})


	INSTALL(TARGETS ${EXE_NAME}
		RUNTIME DESTINATION ${KLAYGE_BIN_DIR}
		LIBRARY DESTINATION ${KLAYGE_BIN_DIR}
		ARCHIVE DESTINATION ${KLAYGE_OUTPUT_DIR}
	)

	KLAYGE_CREATE_VCPROJ_USERFILE(${EXE_NAME})
ENDMACRO(SETUP_TOOL)

ADD_SUBDIRECTORY(ColorGradingTexGen)
ADD_SUBDIRECTORY(DistanceMapCreator)
ADD_SUBDIRECTORY(FFTLensEffectsGen)
ADD_SUBDIRECTORY(ForceTexSRGB)
ADD_SUBDIRECTORY(FXML2Shader)
ADD_SUBDIRECTORY(GLCompatibility)
ADD_SUBDIRECTORY(HDRCompressor)
ADD_SUBDIRECTORY(JudaTexPacker)
ADD_SUBDIRECTORY(KFontGen)
ADD_SUBDIRECTORY(NoiseTexGen)
ADD_SUBDIRECTORY(NormalMapCompressor)
ADD_SUBDIRECTORY(Normal2Height)
ADD_SUBDIRECTORY(NormalMapGen)
ADD_SUBDIRECTORY(NormalsFittingGen)
